# -*- coding: utf-8 -*-
"""pythonbegin (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vk9Znjnbf8poBiI2VrseJFohqZXUI90I

This is python UI
"""

var1 = input("Hi please give me input:")

# Input data
variable_name = input("Please give me input:")

variable_name

print("value is:", variable_name, ".")

# in the next we are printing output
print("variable value is:", variable_name)

a = 1
var = 1

!python --version



"""VARIABLE"""

cab = 'ola'
CAB = "ola1"
_cost = 100.6

cab = 'ola'

int(99.999)

x = 12
y = 11

# x = 12.3
# y = 11.2
print(x,y)

z= x + y

# Basic operations
print("Add x and y is:",z)
print("Add x and y is:", (x+y))
print("Subtraction x and y is:", (x-y))
print("Multiplication x and y is:", (x*y))
print("Division x and y is:", (x/y))
print("Modulus x and y is:", (x%y))
print("Power x to y is:",(x**y))

x= 100
y= 10
print("Modulus x and y is:",(x%y))
print("Powerx to x to y:",(x**y))

x = 1
y = 2
w,z = 1,2

a = True
b = False

# Basic operations
print('x==y : ', x==y)
print('y==z : ', y==z)
print('y>=z : ', y>=z)
print('y<=z : ', y<=z)
print('y!=z : ', y!=z)

print('a and b : ', a and b)
print('a or b : ', a or b)
print('not of a : ', not a)

s1 = 'Hi this is a string data'

# Basic operations


print("Initial String: ",s1)
print("First 2 chars String:",s1[:2])
print("last 3 chars String:",s1[-3:])
print("Substring 4 to 8 chars String: ",s1[3:7])
print("Upper case: ",s1.upper())
print("Lower case: ",s1.lower())
print("Replace substring: ",s1.replace(' ','*'))
print("Length: ",len(s1))
print("Contains substring Hi: ",("Hi" in s1))
print("Concat substring User: ",(s1 + " User"))

l1 =[100,200,250,300,350]

l1

# Syntax
# list [] or l1 =[]
l1 =[100,200,250,300,350]
print("Initial list: ",l1)

#Length
len1 = len(l1)
print("Length of Intial list: ",len1)

# Access
print("1st element of list: ",l1[0])
print("from 2nd to 3th element of list: ",l1[1:3])
print("Last element of list: ",l1[-1])


# Adding element
# 1. Append elements
l1.append(10)
print("Append 10 to the list: ",l1)

# 2. Insert elements
l1.insert(0,50)
print("Insert 50 at pos. 0: ",l1)

#3. Concatenation elements
l1 = l1 + [11,12]
print("Concatenate 2 lists:",l1)


# removing elements
l1.remove(300)
print("Removed 300 from list:",l1)

# sort elements
l1.sort()
print("Sorted List: ",l1)


#Contains element
print("Whether list contains 10: ", 10 in l1)

#syntax
# set1 = {} or set1 = {[]} or set(list)
set1 = {"Patient 1","Patient 2","Patient 3", "Patient 4"}
print("Initial Set: ",set1)

print("Length of Initial set:",len(set1))

# Unique elements in a list
list1 = ["Patient 1","Patient 2","Patient 3",
         "Patient 2","Patient 3","Patient 1",
         "Patient 2"]
set2 = set(list1)
print("Unique elements of list:",set2)

# Substract 2 sets

set3 = set1 - set2
print("Difference between 2 sets:",set3)

# Syntax
# dict1 = {"":"",""}

dict_age = {"Patient 1":20,"Patient 2":25,"Patient 3":28}


# ACCESS keys
print("Keys are:",dict_age.keys())

# ACCESS values

print("Values are:",dict_age.values())

# Access values based on keys
print("Age of Patient 1 is:",dict_age['Patient 1'])
print("Age of Patient 2 is:",dict_age['Patient 2'])
print("Age of Patient 3 is:",dict_age["Patient 3"])

# Example of tuple representing patient information(name, age, gender)
 patient1 = ("Patient 1",30, "Male")
 patient2 = ("Pravin",25, "Female")
 patient3 = ("sham",35, "Male")

 #Access
 print("Age of Patient 1:",patient1[1])


 # Unpacking
 p1_name,p1_age,p1_gender = patient1


 print("Gender of Pravin:",patient2[2])
 print("Name of Patient3:",patient3[0])

#conditional statement



var_age = 10
if var_age >18:
  print("Greater than 18")

elif var_age == 18:
    print("Equal to 18")

else:
      print("less than 18")

var_number = 18
if var_number % 2 == 0:
  print("Even number")
else:
  print("Odd number")

var_age = 19
if not var_age == 18: ### if var_age!=18
  print("Age is not equal to 18")
else:
  print("Age is equal to 18")

# Multiple Condition

var = 21
if var >= 10 and var <= 20:
  print("The age is within 10 to 20")
else:
  print("The age is not within 10 to 20")

# Nested if conditions

var_age = 18
var_weight = 50
if var_age >= 18:
  if var_weight <=50:
    print("The age is greater than 18 and weight is less than 50")
  else:
    print("The age is greater than 18 and weight is greater than 50")

"""LOOPS"""

l1 = [1,2,3,4,5]
for i in l1:
  print(i)

# for loop example

#syntax
#for i in seq:
#Block of code
# while condition
#Block of code



var_patient = ["Patient 1","Patient 2","Patient 3","Patient 4"]
var_age = [20,30,40,50]

for var in var_patient:
  print("Hi welcome to the hospital:",var)

  # for loop with if condition

  count = 0
  for var in var_age:
    if var <30:
      count = count + 1
      print(count)

var_patient = ["Patient 1","Patient 2","Patient 3","Patient 4"]
var_age = [20,30,40,50]
count = 0
for var in var_age:
 if var <30:
      count = count + 1
      print(count)

var_number = [1,2,3,4,5,6,7,8,9,10]
count = 0
for var in var_number:
  if var %2 != 0:
    count = count + 1
    print(count)

var_number = [1,2,3,4,5,6,7,8,9,10]
count = 0
for var in var_number:
  if var %2 == 0:
    count = count + 1
    print(count)

count_even = 0
count_odd = 0
l1 = [1,2,3,4,5]
for i in l1:
  if i%2==0:
    count_even = count_even + 1
    print(i," is even number")
  else:
    count_odd = count_odd + 1
    print(i, "is odd number")
print("even numbers:", count_even)
print("odd numbers:", count_odd)

count_even = 0
count_odd = 0
l1 = [1,2,3,4,5,6,7,8,9,10]
for i in l1:
  if i%2==0:
    count_even = count_even + 1
    print(i," is even number")
  else:
    count_odd = count_odd + 1
    print(i, "is odd number")
print("even numbers:", count_even)
print("odd numbers:", count_odd)

#while loop


num_medicine = 10
while num_medicine > 0:
  num_medicine = num_medicine - 1
  print("Medicine left:",num_medicine)

num_medicine = 45
while num_medicine > 9:
  num_medicine = num_medicine -9
  print("Medicie left:",num_medicine)

#range



for i in range(4,12,3):
  print(i)

"""Break statement example"""

#break statement example

num = ["Patient 1","Patient 2","Patient 3","Patient 4"]
for var in num:
  if var == "Patient 3":
    print("Found Patient 3")
    break
  else:
      print("Did not find Patient 3")

# Continue statement example
var_bp = [120,130,110,140,115,150,125,155,160]

for i in var_bp:
  if i < 130:
    continue
  print("High BP Value(mmHg):",i)

# Enumerate

var_bp = [120,130,110,140,115,150,125,155,160]
for index,var in enumerate(var_bp):
  print(index,var)

var_bp = [120,130,110,140,115,150,125,155,160]
for index,var in enumerate(var_bp):
  if var > 130:
     print("Index is:",index,"Value is ",var)

#zip

var_patient = ["Patient 1","Patient 2","Patient 3","Patient 4"]
var_age = [20,30,40,50]
var_weight = [30.5,30,40.5,50.5]

for num1,num2,num3 in zip(var_patient,var_age,var_weight):
 # print("Patient ID is:", num1, "and age is:", num2, "and weight is:"num3)

 print(f"Patient ID is: {num1} and age is: {num2} and weight is: {num3}")

var_student = ["SHREYA","DEEPAK","NEHA","GANESH"]
var_score = [50,30,40,25]
var_ranking = [4,2,1,3]

for num1,num2,num3 in zip(var_student,var_score,var_ranking):
  print(f"Student Name is: {num1} and score is: {num2} and ranking is: {num3}")